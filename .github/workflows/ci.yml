name: Salesforce CI

on:
  workflow_dispatch:
  push:
    branches: "**"
  pull_request:
    branches: "**"

jobs:
  pmd-apex:
    runs-on: ubuntu-latest
    env:
      PMD_VERSION: 6.55.0
      PMD_CACHE_DIR: $HOME/pmd-cache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download PMD Zip
        run: |
          curl -L -o $HOME/pmd-bin-${{ env.PMD_VERSION }}.zip https://github.com/pmd/pmd/releases/download/pmd_releases/${{ env.PMD_VERSION }}/pmd-bin-${{ env.PMD_VERSION }}.zip

      - name: Unzip PMD Zip
        run: |
          unzip $HOME/pmd-bin-${{ env.PMD_VERSION }}.zip -d $HOME

      - name: Delete PMD Zip
        run: |
          rm $HOME/pmd-bin-${{ env.PMD_VERSION }}.zip

      - name: Restore PMD cache
        uses: actions/cache@v3
        with:
          path: ${{ env.PMD_CACHE_DIR }}
          key: pmd-cache-${{ hashFiles('**/*.cls', '**/*.trigger') }}
          restore-keys: |
            pmd-cache-

      - name: Run PMD
        run: |
          $HOME/pmd-bin-${{ env.PMD_VERSION }}/bin/run.sh pmd -d force-app -R category/apex/design.xml -f text --cache ${{ env.PMD_CACHE_DIR }}

  lint-lwc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Lint Lightning Web Components
        run: npm run lint

  test-lwc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Test Lightning Web Components
        run: npm run test

  salesforce-ci:
    runs-on: ubuntu-latest
    env:
      SFDX_AUTH_URL: ${{ secrets.SFDX_AUTH_URL }}
      SCRATCH_ORG_ALIAS: ci-scratch-org
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Salesforce CLI
        run: |
          npm install --global @salesforce/cli

      - name: Authorize Dev Hub
        run: |
          echo $SFDX_AUTH_URL | sf org login sfdx-url --alias DevHub --set-default-dev-hub --sfdx-url-stdin 

      - name: Create Scratch Org
        run: |
          sf org create scratch --definition-file config/project-scratch-def.json --alias $SCRATCH_ORG_ALIAS --set-default --duration-days 1

      - name: Push Source to Scratch Org
        run: |
          sf project deploy start --target-org $SCRATCH_ORG_ALIAS

      - name: Run Apex tests on Scratch Org
        run: |
          sf apex test run --target-org $SCRATCH_ORG_ALIAS --code-coverage --result-format tap --output-dir test-results --wait 10

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: apex-test-results
          path: test-results

      - name: Delete Scratch Org
        run: |
          sf org delete scratch --target-org $SCRATCH_ORG_ALIAS --no-prompt
